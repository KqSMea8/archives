os: linux
dist: trusty
sudo: false

env: M=dummy

matrix:
  include:
    - language: node_js
      node_js: "8"
      sudo: true # because of losetup(8)
      env: M=linux:x64
      addons:
        apt:
          packages:
            - build-essential
            - wget
            - qemu
            - zsh
            - realpath
            - nodejs
      cache:
        apt: true
        yarn: true
        directories:
          - linux/build/downloads
      install:
        - npm install -g yarn
        - cd linux/pkgbuilder
        - yarn
        - cd ..
      script:
        - BUILD=release make TARGET=x64


    - language: node_js
      node_js: "8"
      sudo: true # because of losetup(8)
      env: M=linux:raspberrypi3
      addons:
        apt:
          packages:
            - binutils-arm-linux-gnueabihf
            - gcc-arm-linux-gnueabihf
            - g++-arm-linux-gnueabihf
            - libc6-dev-armhf-cross
            - build-essential
            - wget
            - zsh
            - realpath
            - nodejs
      cache:
        apt: true
        yarn: true
        directories:
          - linux/build/downloads
      install:
        - npm install -g yarn
        - cd linux/pkgbuilder
        - yarn
        - cd ..
      script:
        - BUILD=release make TARGET=raspberrypi3

    - language: ruby
      env: M=server:backend:sqlite3
      services:
        - redis-server
      cache:
        directories:
          - server/vendor/bundle
      install:
        - cd server
        - bundle install --jobs 2 --path vendor/bundle
        - 'printf "test:\n  adapter: sqlite3\n  database: db/test.sqlite3" > config/database.yml'
        - bundle exec rails db:migrate RAILS_ENV=test
      script:
        - bundle exec rspec

    - language: ruby
      env: M=server:backend:postgresql
      services:
        - postgresql
        - redis-server
      cache:
        directories:
          - server/vendor/bundle
      install:
        - cd server
        - psql -c 'create database travis_ci_test;' -U postgres
        - 'printf "test:\n  adapter: postgresql\n  database: travis_ci_test" > config/database.yml'
        - bundle install --jobs 2 --path vendor/bundle
        - bundle exec rails db:migrate RAILS_ENV=test
      script:
        - bundle exec rspec

    - language: node_js
      node_js: "8"
      env: M=server:frontend
      cache: yarn
      install:
        - cd server/ui
        - cp config.js.example config.js
        - yarn
      script: npm run build

    - language: node_js
      env: M=installer:macos
      os: osx
      osx_image: xcode9.1
      node_js: "8"
      cache:
        yarn: true
        directories:
          - "$HOME/.electron"
          - "$HOME/.cache"
      install:
        - npm install -g yarn
        - cd installer
        - yarn
      script:
        - yarn run build:macos

    - language: node_js
      node_js: "8"
      env: M=installer:linux
      cache:
        yarn: true
        directories:
          - "$HOME/.electron"
          - "$HOME/.cache"
      install:
        - cd installer
        - yarn
      script:
        - yarn run build:linux

    - language: node_js
      node_js: "8"
      env: M=SDK
      cache:
        directories:
          - sdk/node_modules
      install:
        - cd sdk
        - yarn
      script:
        - yarn run cov

    - language: node_js
      node_js: "8"
      env: M=supervisor
      cache:
        directories:
          - supervisor/node_modules
      install:
        - cd supervisor
        - yarn
      script:
        - yarn run cov

    - language: node_js
      node_js: "8"
      env: M=runtime
      cache:
        directories:
          - runtime/node_modules
      install:
        - cd runtime
        - yarn
      script:
        - yarn run cov

    - language: node_js
      node_js: "8"
      env: M=makestack.github.io
      cache:
        directories:
          - makestack.github.io/node_modules
      before_install:
        - cd makestack.github.io
        - >
          openssl aes-256-cbc -K $encrypted_35e7b7f33db9_key -iv $encrypted_35e7b7f33db9_iv
          -in deploy.sshkey.enc -out ~/.ssh/id_rsa -d
        - chmod 600 ~/.ssh/id_rsa
      install:
        - yarn
      script:
        - yarn deploy

notifications:
  on_success: change
  on_failure: change
