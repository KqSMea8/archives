.PHONY: _default
_default: default
# keep blank not to delete intermediate file (especially stub files)
.SECONDARY:
$(VERBOSE).SILENT:

#
#  global config
#
export __builtins__ = {'chr': <built-in function chr>, 'next': <built-in function next>, 'ZeroDivisionError': <class 'ZeroDivisionError'>, 'list': <class 'list'>, 'UnicodeEncodeError': <class 'UnicodeEncodeError'>, 'setattr': <built-in function setattr>, 'RuntimeError': <class 'RuntimeError'>, 'TimeoutError': <class 'TimeoutError'>, 'classmethod': <class 'classmethod'>, 'RecursionError': <class 'RecursionError'>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, 'bytes': <class 'bytes'>, 'print': <built-in function print>, 'AttributeError': <class 'AttributeError'>, 'staticmethod': <class 'staticmethod'>, 'SystemError': <class 'SystemError'>, 'UnicodeTranslateError': <class 'UnicodeTranslateError'>, 'MemoryError': <class 'MemoryError'>, 'dir': <built-in function dir>, 'license': Type license() to see the full license text, '__debug__': True, 'False': False, 'round': <built-in function round>, 'bin': <built-in function bin>, 'divmod': <built-in function divmod>, 'None': None, 'NotImplemented': NotImplemented, 'ConnectionRefusedError': <class 'ConnectionRefusedError'>, 'UnicodeDecodeError': <class 'UnicodeDecodeError'>, 'format': <built-in function format>, 'TypeError': <class 'TypeError'>, '__name__': 'builtins', 'float': <class 'float'>, 'GeneratorExit': <class 'GeneratorExit'>, 'UserWarning': <class 'UserWarning'>, 'delattr': <built-in function delattr>, 'pow': <built-in function pow>, 'NotImplementedError': <class 'NotImplementedError'>, 'ConnectionAbortedError': <class 'ConnectionAbortedError'>, 'reversed': <class 'reversed'>, 'iter': <built-in function iter>, 'KeyboardInterrupt': <class 'KeyboardInterrupt'>, 'hex': <built-in function hex>, 'isinstance': <built-in function isinstance>, 'slice': <class 'slice'>, 'frozenset': <class 'frozenset'>, 'int': <class 'int'>, 'input': <built-in function input>, 'locals': <built-in function locals>, 'RuntimeWarning': <class 'RuntimeWarning'>, 'ResourceWarning': <class 'ResourceWarning'>, 'SyntaxError': <class 'SyntaxError'>, 'hasattr': <built-in function hasattr>, 'super': <class 'super'>, 'str': <class 'str'>, 'abs': <built-in function abs>, 'max': <built-in function max>, 'enumerate': <class 'enumerate'>, 'PendingDeprecationWarning': <class 'PendingDeprecationWarning'>, 'dict': <class 'dict'>, 'EOFError': <class 'EOFError'>, 'TabError': <class 'TabError'>, 'Ellipsis': Ellipsis, 'map': <class 'map'>, 'ConnectionError': <class 'ConnectionError'>, 'sorted': <built-in function sorted>, 'memoryview': <class 'memoryview'>, 'FutureWarning': <class 'FutureWarning'>, 'LookupError': <class 'LookupError'>, 'FloatingPointError': <class 'FloatingPointError'>, 'BaseException': <class 'BaseException'>, 'BrokenPipeError': <class 'BrokenPipeError'>, 'BytesWarning': <class 'BytesWarning'>, 'KeyError': <class 'KeyError'>, 'IndentationError': <class 'IndentationError'>, 'type': <class 'type'>, 'Exception': <class 'Exception'>, 'set': <class 'set'>, 'globals': <built-in function globals>, 'OSError': <class 'OSError'>, '__import__': <built-in function __import__>, 'IndexError': <class 'IndexError'>, 'OverflowError': <class 'OverflowError'>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'DeprecationWarning': <class 'DeprecationWarning'>, 'BufferError': <class 'BufferError'>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'tuple': <class 'tuple'>, 'ProcessLookupError': <class 'ProcessLookupError'>, 'UnicodeError': <class 'UnicodeError'>, 'True': True, 'ord': <built-in function ord>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, '__package__': '', 'any': <built-in function any>, 'PermissionError': <class 'PermissionError'>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'ImportWarning': <class 'ImportWarning'>, 'hash': <built-in function hash>, 'ascii': <built-in function ascii>, 'vars': <built-in function vars>, 'open': <built-in function open>, 'all': <built-in function all>, 'SyntaxWarning': <class 'SyntaxWarning'>, 'callable': <built-in function callable>, 'repr': <built-in function repr>, 'ConnectionResetError': <class 'ConnectionResetError'>, 'issubclass': <built-in function issubclass>, '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>), 'getattr': <built-in function getattr>, 'FileNotFoundError': <class 'FileNotFoundError'>, 'IsADirectoryError': <class 'IsADirectoryError'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'SystemExit': <class 'SystemExit'>, 'NameError': <class 'NameError'>, 'InterruptedError': <class 'InterruptedError'>, 'compile': <built-in function compile>, 'min': <built-in function min>, 'bytearray': <class 'bytearray'>, 'filter': <class 'filter'>, 'UnboundLocalError': <class 'UnboundLocalError'>, 'ReferenceError': <class 'ReferenceError'>, 'id': <built-in function id>, 'property': <class 'property'>, 'oct': <built-in function oct>, 'IOError': <class 'OSError'>, 'sum': <built-in function sum>, '__build_class__': <built-in function __build_class__>, 'range': <class 'range'>, 'NotADirectoryError': <class 'NotADirectoryError'>, 'BlockingIOError': <class 'BlockingIOError'>, 'eval': <built-in function eval>, 'len': <built-in function len>, 'ValueError': <class 'ValueError'>, 'bool': <class 'bool'>, 'StopIteration': <class 'StopIteration'>, 'ArithmeticError': <class 'ArithmeticError'>, 'UnicodeWarning': <class 'UnicodeWarning'>, 'exec': <built-in function exec>, 'ChildProcessError': <class 'ChildProcessError'>, 'Warning': <class 'Warning'>, 'EnvironmentError': <class 'OSError'>, 'AssertionError': <class 'AssertionError'>, 'StopAsyncIteration': <class 'StopAsyncIteration'>, 'complex': <class 'complex'>, 'FileExistsError': <class 'FileExistsError'>, 'help': Type help() for interactive help, or help(object) for help about object., 'zip': <class 'zip'>, 'ImportError': <class 'ImportError'>, 'object': <class 'object'>}
export HAL_RUN = packages/arm/machines/raspi/run
export HAL = arm
export BUILTIN_APPS = ,arm
export CC = arm-elf-eabi-gcc
export CATEGORY = library
export PACKAGE = arm
export HAL_LINK = $(LD) -Map $(BUILD_DIR)/executable.map -nostdlib -nodefaultlibs -Tpackages/arm/macines/raspi/executable.lds -o

export LD = arm-elf-eabi-ld
export MACHINE = raspi
export HAL_GENSTART = ./packages/posix_host/genstart
export GENSTART_ARGS =  arm
export RESEAPATH = 
export BUILD_DIR = build/release
export LIBS = []
export START_SOURCE_EXT = c
export ENV = release
export MKDIR = mkdir
export CFLAGS = -Wall -ggdb3 -std=c99 -Wno-incompatible-library-redeclaration -fdiagnostics-color      -Ipackages/cpp/src -I$(BUILD_DIR)/stubs/c -ffreestanding -Ipackages/arm/src  -mcpu=arm1176jzf-s -mfloat-abi=soft -ffreestanding -Ipackages/arm/src  -mcpu=arm1176jzf-s -mfloat-abi=soft
export LD_R = $(LD) -r -o
export CMDECHO = echo "-->"
export MAKEFLAGS = -j8
export HAL_GENIMAGE = packages/arm/machines/raspi/genimage

#
#  link
#
default: $(BUILD_DIR)/library
$(BUILD_DIR)/library: \
    build/release/arm/src/startup.o \
    build/release/arm/src/debug.o \
    build/release/arm/src/thread.o \
    build/release/arm/src/memory.o \
    build/release/arm/src/hw.o \
    build/release/arm/src/vm.o \
    build/release/arm/src/cpu.o \
    build/release/arm/src/io.o \
    build/release/arm/src/init.o \
    build/release/arm/src/callback.o \
    build/release/arm/src/startup.o \
    build/release/arm/src/debug.o \
    build/release/arm/src/thread.o \
    build/release/arm/src/memory.o \
    build/release/arm/src/hw.o \
    build/release/arm/src/vm.o \
    build/release/arm/src/cpu.o \
    build/release/arm/src/io.o \
    build/release/arm/src/init.o \
    build/release/arm/src/callback.o \
    build/release/cpp/src/channel.o \
    build/release/cpp/src/ctype.o \
    build/release/cpp/src/string.o \
    build/release/cpp/src/syscall.o \
    build/release/cpp/src/memory.o \
    build/release/cpp/src/mutex.o \
    build/release/cpp/src/printfmt.o \
    build/release/start.o \

	$(CMDECHO) LD_R $@
	$(LD_R) $@ $^

#
#  start
#
$(BUILD_DIR)/start.c:
	$(CMDECHO) GEN $@
	WITH_THREADING=yes ./packages/posix_host/genstart  arm > $@
# FIXME: WITH_THREADING is hard coded

#
#  lang
#
#  *.c

STUBS_c = \
  $(BUILD_DIR)/stubs/c/resea/hal.h \
  $(BUILD_DIR)/stubs/c/resea/lang.h \
  $(BUILD_DIR)/stubs/c/resea/arm.h \
  $(BUILD_DIR)/stubs/c/resea/arm.h \
  $(BUILD_DIR)/stubs/c/resea/cpp.h \

$(BUILD_DIR)/stubs/c/resea/%.h: packages/%/package.yml
	$(MKDIR) -p $(@D)
	$(CMDECHO) GENSTUB $@
	PACKAGE_NAME=$(PACKAGE_NAME) ./packages/cpp/genstub $@ $<

$(BUILD_DIR)/%.o: packages/%.c $(STUBS_c) $(BUILD_DIR)/Makefile
	$(MKDIR) -p $(@D)
	$(CMDECHO) 'CC' $@
	PACKAGE_NAME=$(PACKAGE_NAME) sh -c '$(CC) $(CFLAGS) -DPACKAGE_NAME=\"${PACKAGE_NAME}\" -c -o $@ $<'
#  *.cpp

STUBS_cpp = \
  $(BUILD_DIR)/stubs/cpp/resea/hal.hpp \
  $(BUILD_DIR)/stubs/cpp/resea/lang.hpp \
  $(BUILD_DIR)/stubs/cpp/resea/arm.hpp \
  $(BUILD_DIR)/stubs/cpp/resea/arm.hpp \
  $(BUILD_DIR)/stubs/cpp/resea/cpp.hpp \

$(BUILD_DIR)/stubs/cpp/resea/%.hpp: packages/%/package.yml
	$(MKDIR) -p $(@D)
	$(CMDECHO) GENSTUB $@
	PACKAGE_NAME=$(PACKAGE_NAME) ./packages/cpp/genstub $@ $<

$(BUILD_DIR)/%.o: packages/%.cpp $(STUBS_cpp) $(BUILD_DIR)/Makefile
	$(MKDIR) -p $(@D)
	$(CMDECHO) 'CXX' $@
	PACKAGE_NAME=$(PACKAGE_NAME) sh -c 'echo $@ $<'
#  *.S


$(BUILD_DIR)/%.o: packages/%.S $(STUBS_S) $(BUILD_DIR)/Makefile
	$(MKDIR) -p $(@D)
	$(CMDECHO) 'AS' $@
	PACKAGE_NAME=$(PACKAGE_NAME) sh -c '$(CC) $(CFLAGS) -c -o $@ $<'

#
#  local config
#
# cpp
$(BUILD_DIR)/cpp/%: PACKAGE_NAME = cpp
$(BUILD_DIR)/cpp/%: SOURCES = ['src/channel.c', 'src/ctype.c', 'src/string.c', 'src/syscall.c', 'src/memory.c', 'src/mutex.c', 'src/printfmt.c']
# arm
$(BUILD_DIR)/arm/%: PACKAGE_NAME = arm
$(BUILD_DIR)/arm/%: SOURCES = ['src/startup.c', 'src/debug.c', 'src/thread.c', 'src/memory.c', 'src/hw.c', 'src/vm.c', 'src/cpu.c', 'src/io.c', 'src/init.S', 'src/callback.c']
$(BUILD_DIR)/arm/%: LIBS = ['`$(CC) -print-libgcc-file-name`']
