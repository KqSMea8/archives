name: tcpip
category: application
id: 9
license: Public Domain
summary: The TCP/IP server
description: # longer explanation

warning:     # some important things to note
info:        # what we should know

author: Seiya Nuta
email: nuta@seiya.me
homepage: http://resea.net

# Prefered language
lang: c

# Required packages
depends: [cpp, channel]

# Interfaces which this package uses
uses: []

# Interfaces which this package implements
implements: []


#
#  Type definitions
#
types:
  protocol:
    type: const
    size: uint32
    consts:
      PROTOCOL_IPV4: 0x0001
      PROTOCOL_IPV6: 0x0004
      PROTOCOL_UDP:  0x0008
      PROTOCOL_TCP:  0x0010


#
#  Interface definitions
#
interface:
  open:
    id: 1
    payloads:
      - name: transport
        type: tcpip(protocol)
      - name: handler
        type: channel
  open_reply:
    id: 2
    payloads:
      - name: result
        type: result
      - name: socket
        type: id

  close:
    id: 3
    payloads:
      - name: socket
        type: id
  close_reply:
    id: 4
    payloads:
      - name: result
        type: result

  bind:
    id: 5
    payloads:
      - name: socket
        type: id
      - name: network
        type: tcpip(protocol)
      - name: address
        type: data
      - name: port
        type: uint16
  bind_reply:
    id: 6
    payloads:
      - name: result
        type: result

  sendto:
    id: 7
    payloads:
      - name: socket
        type: id
      - name: network
        type: tcpip(protocol)
      - name: address
        type: data
      - name: port
        type: uint16
      - name: payload
        type: data
  sendto_reply:
    id: 8
    payloads:
      - name: result
        type: result

  received:
    id: 9
    payloads:
      - name: socket
        type: id
      - name: network
        type: tcpip(protocol)
      - name: address
        type: data
      - name: port
        type: uint16
      - name: payload
        type: data


#
#  Config
#
config:
  - SOURCES:
      set:
        - src/arp.cpp
        - src/endian.cpp
        - src/icmp.cpp
        - src/ip.cpp
        - src/ipv4.cpp
        - src/malloc.cpp
        - src/mbuf.cpp
        - src/receive.cpp
        - src/udp.cpp
        - src/socket.cpp
        - src/startup.cpp
        - src/handler.cpp
        - src/tcpip.open.cpp
        - src/tcpip.close.cpp
        - src/tcpip.bind.cpp
        - src/tcpip.sendto.cpp
  - if: "ENV == 'test'"
    SOURCES:
      set:
        - tests/test.cpp
