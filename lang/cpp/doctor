#!/usr/bin/env python3
import os
import sys
import glob
import tempfile
import subprocess
import webbrowser
from resea.helpers import info, notice, plan, progress, load_yaml, render
from resea.validators import validate_package_yml
import resea.commands.build
import resea.commands.test

LANG_HTML = """
<li><a href="file:///{{ csa_dir }}/index.html">Static code analysis</a></li>
<li><a href="file:///{{ coverage_dir }}/index.html">Test coverage</a></li>
"""

def main():
    _, lang_html_path, tmp_dir = sys.argv # TODO
    yml = load_yaml('package.yml', validator=validate_package_yml)

    if yml['category'] in ['application', 'library']:
        plan('Analysing with Clang Static Analyzer')
        csa_dir = os.path.join(tmp_dir, 'csa')
        resea.commands.build.main([
           'HAL=posix_host',
           'MAKE=scan-build -o {} make'.format(csa_dir),
           'CC=clang',
           'HAL_LINK=clang -pthread -o'
        ])

        plan('Testing with gcov')
        resea.commands.test.main([
           'HAL=posix_host',
           'CFLAGS=-fprofile-arcs -ftest-coverage',
           'CXXFLAGS=-fprofile-arcs -ftest-coverage',
           'HAL_LINK=gcc -fprofile-arcs -ftest-coverage -pthread -o'
        ])

        progress('Collecting coverages')
        coverage_info = os.path.join(tmp_dir, 'coverage.info')
        coverage_dir = os.path.join(tmp_dir, 'coverage')
        subprocess.run(['lcov', '--capture', '--directory',
            'build/test/' + yml['name'],
            '--quiet', '--output-file', coverage_info],
            check=True)
        subprocess.run(['genhtml', coverage_info, '--quiet',
            '--output-directory', coverage_dir],
            check=True)

        with open(lang_html_path, 'w') as f:
            f.write(render(LANG_HTML, locals()))

if __name__ == '__main__':
    main()
